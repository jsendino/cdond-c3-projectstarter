version: 2.1

commands: 
  destroy_env:
    description: "Destroys CloudFormation stack"
    parameters:
      env_name: 
        type: string
    steps:
      - run:
          name: Destroy env if error
          command: aws cloudformation delete-stack --stack-name << parameters.env_name >> 
          when: on_fail

jobs:
  create_and_deploy_front_end:
    docker:
      - image: amazon/aws-cli # every job must define an image for the docker executor and subsequent jobs may define a different image.
    steps:
      - checkout
      - run: |
         aws cloudformation deploy \
          --template-file bucket.yml \
          --stack-name "stack-${CIRCLE_WORKFLOW_ID:0:7}" \
          --parameter-overrides NAME=${CIRCLE_WORKFLOW_ID:0:7}
      - destroy_env:
          env_name: ${CIRCLE_WORKFLOW_ID:0:7}
  get_last_deployment_id:
    docker:
      - image: cibuilds/aws:1.16.1
    steps:
      - run: | 
          aws cloudformation \
            list-exports --query "Exports[?Name==\`PipelineID\`].Value" \
            --no-paginate --output text >> pipeline_id.txt
      - persist_to_workspace:
          root: .
          paths:
            - pipeline_id.txt
  promote_to_production:
    docker:
      - image: amazon/aws-cli  
    steps:
      - checkout
      - run: | 
         aws cloudformation deploy \
          --template-file cloudfront.yml \
          --stack-name production-distro \
          --parameter-overrides PipelineID=${CIRCLE_WORKFLOW_ID:0:7}
      - destroy_env:
          env_name: ${CIRCLE_WORKFLOW_ID:0:7}
  clean_up_old_front_end: 
    docker:
      - image: cibuilds/aws:1.16.1
    steps:
      - attach_workspace:
          at: .
      -  run: |
          OldPipelineID=`cat pipeline_id.txt`
          aws s3 rm "s3://${OldPipelineID}" --recursive
          aws cloudformation delete-stack --stack-name "${OldPipelineID}"

workflows:
  main:
    jobs:   
      - create_and_deploy_front_end
      - get_last_deployment_id
      - promote_to_production
      - clean_up_old_front_end:
          requires: 
            - get_last_deployment_id